package br.com.cristalia.colunas.view;

import br.com.cristalia.biblioteca.dao.AnaliseDAO;
import br.com.cristalia.biblioteca.dao.EquipamentoDAO;
import br.com.cristalia.biblioteca.dao.SetorDAO;
import br.com.cristalia.biblioteca.model.Analise;
import br.com.cristalia.biblioteca.model.Equipamento;
import br.com.cristalia.biblioteca.model.Metodologia;
import br.com.cristalia.biblioteca.model.Setor;
import br.com.cristalia.biblioteca.util.Frames;
import br.com.cristalia.biblioteca.util.Senha;
import br.com.cristalia.biblioteca.dao.CampanhaDAO;
import br.com.cristalia.biblioteca.dao.MetodologiaDAO;
import br.com.cristalia.biblioteca.model.Campanha;
import br.com.cristalia.biblioteca.util.ComboBox;
import java.util.TreeMap;
import java.awt.Cursor;
import javax.swing.JOptionPane;

/**
 *
 * @author rafael.lopes
 */
public class FrmCampanhaDados extends javax.swing.JDialog {

    private Campanha campanha;
    private boolean novo = false;
    private final TreeMap<Long, String> categoryMapSetor = new TreeMap<>();
    private final TreeMap<Long, String> categoryMapMetodo = new TreeMap<>();
    private final TreeMap<Long, String> categoryMapAnalise = new TreeMap<>();
    private final TreeMap<Long, String> categoryMapEquipamento = new TreeMap<>();

    /**
     * Creates new form FrmConfigAcesso
     *
     * @param parent
     * @param modal
     */
    public FrmCampanhaDados(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
        novo = true;
    }

    public FrmCampanhaDados(java.awt.Frame parent, boolean modal, Campanha camp) {
        super(parent, modal);
        initComponents();
        init();
        campanha = camp;
        carregarDados();
    }

    private void init() {
        Frames.setUpFrame(this, "Campanhas", true);
        carregarSetor();
        carregarEquipamento();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSalvarUsuario = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txtObs = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        cmbSetor = new javax.swing.JComboBox();
        jLabel29 = new javax.swing.JLabel();
        cmbEquipamento = new javax.swing.JComboBox();
        jLabel41 = new javax.swing.JLabel();
        txtDataInicio = new com.toedter.calendar.JDateChooser();
        jLabel24 = new javax.swing.JLabel();
        txtMetodologia = new javax.swing.JTextField();
        btnProcurarMetodo = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        txtAnalise = new javax.swing.JTextField();
        btnProcurarAnalise = new javax.swing.JButton();
        txtCampanha = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        txtDataFim = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnSalvarUsuario.setText("Ok");
        btnSalvarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarUsuarioActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Campanha"));

        jLabel10.setText("Obs:");

        jLabel5.setText("Campanha:");

        jLabel28.setText("Setor:");

        jLabel29.setText("Equipamento:");

        jLabel41.setText("Data Início:");

        jLabel24.setText("Método:");

        txtMetodologia.setEditable(false);
        txtMetodologia.setBackground(new java.awt.Color(204, 204, 204));

        btnProcurarMetodo.setText("Buscar");
        btnProcurarMetodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcurarMetodoActionPerformed(evt);
            }
        });

        jLabel31.setText("Análise:");

        txtAnalise.setEditable(false);
        txtAnalise.setBackground(new java.awt.Color(204, 204, 204));

        btnProcurarAnalise.setText("Buscar");
        btnProcurarAnalise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcurarAnaliseActionPerformed(evt);
            }
        });

        jLabel42.setText("Data Fim:");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(txtMetodologia)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnProcurarMetodo))
                            .addComponent(txtCampanha)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel41, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtObs, javax.swing.GroupLayout.DEFAULT_SIZE, 567, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                .addComponent(txtAnalise)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnProcurarAnalise))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDataInicio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE)
                                    .addComponent(cmbEquipamento, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmbSetor, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(222, 222, 222))))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(txtDataFim, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(222, 222, 222)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtCampanha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(btnProcurarMetodo)
                    .addComponent(txtMetodologia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnProcurarAnalise)
                        .addComponent(txtAnalise, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel31))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbSetor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbEquipamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDataFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(txtObs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSalvarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvarUsuario)
                    .addComponent(btnCancelar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarUsuarioActionPerformed
        salvar();
    }//GEN-LAST:event_btnSalvarUsuarioActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        fechar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnProcurarMetodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcurarMetodoActionPerformed
        try {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            Metodologia mtd = new Metodologia();
            FrmProcurarMetodologia frmMtd = new FrmProcurarMetodologia(null, true, mtd);
            frmMtd.setVisible(true);
            if (mtd.getId() != null) {
                String name = mtd.getCodMetodo() + " - " + mtd.getMetodo();
                txtMetodologia.setText(name);
                categoryMapMetodo.clear();
                categoryMapMetodo.put(mtd.getId(), name);
            }
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + ex);
        }
    }//GEN-LAST:event_btnProcurarMetodoActionPerformed

    private void btnProcurarAnaliseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcurarAnaliseActionPerformed
        try {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            Analise anls = new Analise();
            FrmProcurarAnalise frmAnls = new FrmProcurarAnalise(null, true, anls);
            frmAnls.setVisible(true);
            if (anls.getId() != null) {
                String name = anls.getAnalise();
                txtAnalise.setText(name);
                categoryMapAnalise.clear();
                categoryMapAnalise.put(anls.getId(), name);
            }
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + ex);
        }
    }//GEN-LAST:event_btnProcurarAnaliseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmCampanhaDados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                FrmCampanhaDados dialog = new FrmCampanhaDados(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnProcurarAnalise;
    private javax.swing.JButton btnProcurarMetodo;
    public static javax.swing.JButton btnSalvarUsuario;
    private javax.swing.JComboBox cmbEquipamento;
    private javax.swing.JComboBox cmbSetor;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel7;
    public static javax.swing.JTextField txtAnalise;
    public static javax.swing.JTextField txtCampanha;
    public static com.toedter.calendar.JDateChooser txtDataFim;
    public static com.toedter.calendar.JDateChooser txtDataInicio;
    public static javax.swing.JTextField txtMetodologia;
    private javax.swing.JTextField txtObs;
    // End of variables declaration//GEN-END:variables

    private void carregarSetor() {
        cmbSetor.removeAllItems();
        cmbSetor.addItem("");
        categoryMapSetor.clear();
        SetorDAO setorDAO = new SetorDAO();
        try {
            for (Setor setor : setorDAO.findEntities(Setor.class)) {
                Long id = setor.getId();
                String name = setor.getSiglaSetor();
                cmbSetor.addItem(name);
                categoryMapSetor.put(id, name);
            }
        } catch (Exception e) {
        }
    }

    private void carregarEquipamento() {
        cmbEquipamento.removeAllItems();
        cmbEquipamento.addItem("");
        categoryMapEquipamento.clear();
        EquipamentoDAO equipDAO = new EquipamentoDAO();
        try {
            for (Equipamento equip : equipDAO.findTagByTipo("Cromatógrafo")) {
                Long id = equip.getId();
                String name = equip.getTag();
                cmbEquipamento.addItem(name);
                categoryMapEquipamento.put(id, name);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + e);
        }
    }

    private void carregarDados() {
        CampanhaDAO campDAO = new CampanhaDAO();
        try {
            campanha = campDAO.findById(Campanha.class, campanha.getId());
            txtCampanha.setText(campanha.getCampanha().toUpperCase().trim());
            Metodologia mtd = new MetodologiaDAO().findById(Metodologia.class, campanha.getMetodologia().stream().findFirst().get().getId());
            String nameMtd = mtd.getCodMetodo() + " - " + mtd.getMetodo();
            txtMetodologia.setText(nameMtd);
            categoryMapMetodo.clear();
            categoryMapMetodo.put(mtd.getId(), nameMtd);
            Analise anls = new AnaliseDAO().findById(Analise.class, campanha.getAnalise().stream().findFirst().get().getId());
            String nameAnls = anls.getAnalise();
            txtAnalise.setText(nameAnls);
            categoryMapAnalise.clear();
            categoryMapAnalise.put(anls.getId(), nameAnls);
            String[] setor = {campanha.getSetor().getSiglaSetor()};
            cmbSetor.setSelectedItem(setor[0]);
            String[] equip = {campanha.getEquipamento().getTag()};
            cmbEquipamento.setSelectedItem(equip[0]);
            txtDataInicio.setDate(campanha.getDataInicio());
            txtDataFim.setDate(campanha.getDataFim());
            txtObs.setText(campanha.getObs());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + e);
        }
    }

    private void salvar() {
        Senha senha = new Senha();
        try {
            if (txtCampanha.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Campanha inválida");
                txtCampanha.requestFocus();
            } else if (txtMetodologia.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Métodologia inválida");
                btnProcurarMetodo.requestFocus();
            } else if (cmbSetor.getSelectedItem().toString().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Setor inválido");
                cmbSetor.requestFocus();
            } else if (txtAnalise.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Análise inválida");
                btnProcurarAnalise.requestFocus();
            } else if (cmbEquipamento.getSelectedItem().toString().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Equipamento inválido");
                cmbEquipamento.requestFocus();
            } else if (txtDataInicio.isValid()) {
                JOptionPane.showMessageDialog(null, "Data Inicial Inválida");
                txtDataInicio.requestFocus();
            } else if (novo) {
                if (senha.Salvar()) {
                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    criar();
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                    dispose();
                }
            } else {
                if (senha.Salvar()) {
                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    atulizar();
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                    dispose();
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao salvar dados: " + e);
        }
    }

    private void criar() {
        try {
            Campanha camp = new Campanha();
            CampanhaDAO campDAO = new CampanhaDAO();
            camp.setCampanha(txtCampanha.getText().toUpperCase().trim());
            camp.setSetor(new SetorDAO().findById(Setor.class, ComboBox.getKeyForValue(cmbSetor.getSelectedItem().toString(), categoryMapSetor)));
            camp.setEquipamento(new EquipamentoDAO().findById(Equipamento.class, ComboBox.getKeyForValue(cmbEquipamento.getSelectedItem().toString(), categoryMapEquipamento)));
            camp.setDataInicio(txtDataInicio.getDate());
            camp.setDataFim(txtDataFim.getDate());
            camp.setObs(txtObs.getText().toUpperCase().trim());
            camp.setVersion(0);
            campDAO.salvar(camp);
            camp.getMetodologia().add(new MetodologiaDAO().findById(Metodologia.class, ComboBox.getKeyForValue(txtMetodologia.getText(), categoryMapMetodo)));
            camp.getAnalise().add(new AnaliseDAO().findById(Analise.class, ComboBox.getKeyForValue(txtAnalise.getText(), categoryMapAnalise)));
            campDAO.salvar(camp);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao criar dados: " + ex);
        }
    }

    private void atulizar() {
        try {
            CampanhaDAO campDAO = new CampanhaDAO();
            campanha.setCampanha(txtCampanha.getText().toUpperCase().trim());
            campanha.getMetodologia().add(new MetodologiaDAO().findById(Metodologia.class, ComboBox.getKeyForValue(txtMetodologia.getText(), categoryMapMetodo)));
            campanha.getAnalise().add(new AnaliseDAO().findById(Analise.class, ComboBox.getKeyForValue(txtAnalise.getText(), categoryMapAnalise)));
            campanha.setSetor(new SetorDAO().findById(Setor.class, ComboBox.getKeyForValue(cmbSetor.getSelectedItem().toString(), categoryMapSetor)));
            campanha.setEquipamento(new EquipamentoDAO().findById(Equipamento.class, ComboBox.getKeyForValue(cmbEquipamento.getSelectedItem().toString(), categoryMapEquipamento)));
            campanha.setDataInicio(txtDataInicio.getDate());
            campanha.setDataFim(txtDataFim.getDate());
            campanha.setObs(txtObs.getText().toUpperCase().trim());
            campanha.setVersion(campanha.getVersion() + 1);
            campDAO.salvar(campanha);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao atualizar dados: " + ex);
        }
    }

    private void fechar() {
        Frames.fecharFrame(this);
    }
}
